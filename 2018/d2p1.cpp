#include <iostream>
#include <string>
using namespace std;

int main()
{
    string codes[] = {
	"xrysntkqrduheficajodiglvzw",
	"xzymntkqrbuhefmcajodiflvzw",
	"xpysetkyrbuhefmcajodiglvgw",
	"xtysnykqrbuhefmczjodiglvzw",
	"xpysntkqyvuhefmjajodiglvzw",
	"xpysntkqrbuqjfmcajodiglvzu",
	"xpysntkqrbuhefmvaoodimlvzw",
	"xplsntkqrbuhefmcajohimlvzw",
	"cpysntkqrbuhefmcajodiglpmw",
	"xpysndkqrbuhefmcajzdiglmzw",
	"xpysntkqrbuhsfmctjoqiglvzw",
	"xpysztkkrbuhewmcajodiglvzw",
	"xpysntkguzuhefmcajodiglvzw",
	"xpysnbkvrbuhyfmcajodiglvzw",
	"xpgsntkqrbphefmcajodzglvzw",
	"xpysntkqrbdhefmcajodvgqvzw",
	"xpmsntkqrbuhedmcajodiglvnw",
	"wpysntkqmbuheemcajodiglvzw",
	"xpysntdvrbuhdfmcajodiglvzw",
	"xpbsetkqrbuhefmcayodiglvzw",
	"xpasntkqrbuhefmcajydigovzw",
	"xpylntkqrbuhefmcajudiglnzw",
	"xpysqtkqrbuoefmcrjodiglvzw",
	"xlysntkqrbuhefmuejodiglvzw",
	"xpysntkqrzuhewmcajodaglvzw",
	"xpysotkqrbuhefmxajowiglvzw",
	"xpysntkqrbuhefmcajodinlyza",
	"xpysntkqrbuhemmmajofiglvzw",
	"xpysntkqcbuhezmcyjodiglvzw",
	"xpysntyqrbuhefmcajodiglvfn",
	"xpysntkqrbudefmcarodcglvzw",
	"xpysntkqrjuhefkcajodiglvzg",
	"xpysntkqrbuhefmcahooiglvow",
	"xpysntkqrqfhevmcajodiglvzw",
	"xpysntlqrbuhefmcajodivlvzu",
	"xpyjotkqrbuhefmcavodiglvzw",
	"xpysntqqrbuhebmcgjodiglvzw",
	"xpjsnikqbbuhefmcajodiglvzw",
	"xpysntkqrbuhefmcalodeflvzw",
	"xpysntktrbuhefmcaqoviglvzw",
	"xpysntkqrbuhefmcrjogiglvzk",
	"xpysntkqrjuhekmcajodixlvzw",
	"xpypntyqrbuhefmcajodigzvzw",
	"cpysnwkqrbuhefmcajodiglvww",
	"xpysntkqqbuqefmcajodiglvlw",
	"xpysntkqrbuhvfmcajldiglvzh",
	"xpysntkqrbuhefmzmjodislvzw",
	"xpysnnkqrbuhefmcajodjplyzw",
	"xpysntdqobuhefmcajbdiglvzw",
	"xpyzntknrbuhefmcajodigtvzw",
	"xpysntkqbbohefmcajodialvzw",
	"xpysntkqryuhefmcayoxiglvzw",
	"xxysntkqrbuhefmcajodiglgzl",
	"jzysntkqrbuhmfmcajodiglvzw",
	"xpysntocrbuhefmcakodiglvzw",
	"xpysntkqrbuheomrgjodiglvzw",
	"xpysntkerbuhefmxajoduglvzw",
	"xpysntkqobuhefpcajodiglvzd",
	"xpysntkqrbvhefmcajopislvzw",
	"xpysntkqrbuhefucqjodiglvqw",
	"xpysvtkqrbuhdfmcajokiglvzw",
	"xqysnjkqrbuhemmcajodiglvzw",
	"xpysnteqxbuhefmcajodiglvdw",
	"xpysntkqrbuhefzcajodignvzc",
	"xpysntkqrbuledmcajoyiglvzw",
	"xpysntkqrbuhofmcajkdigpvzw",
	"xpysmtkqrbuhefmcajodaglvze",
	"xlysntiqrbuhefmqajodiglvzw",
	"xpysntvqrbugefmcajodiglizw",
	"xpysntkqrbuhefmuwjndiglvzw",
	"ypysntkqrbuhefmbajodislvzw",
	"xpycntkqrbuhemmcaqodiglvzw",
	"xpysntkqrbuhefmcajobivdvzw",
	"xpysnfkprbuhefmcajodiglvkw",
	"xtysntkwrjuhefmcajodiglvzw",
	"xpysntkqrbqhefmcaxodiulvzw",
	"xpysntkqrbuhefmcajsdigkvkw",
	"xpysnekqrbugefmcajwdiglvzw",
	"xpysntkqjbuhefmcajoduglbzw",
	"xpysntkqrbohlfmcajodiggvzw",
	"xpysntkqrbfhefmcajodiglhnw",
	"xpmsntkirbusefmcajodiglvzw",
	"xpnsntkqrbehefmcajodigrvzw",
	"xpytntgqrbuhefmcajodigllzw",
	"xpysntkqrbuhefmcejodiglvvm",
	"xpyvntkqrbuhefmmajodiglmzw",
	"rpysntkirbuhefmcajodiglyzw",
	"xpysntkqrbuhefmcajoznglvzz",
	"xpysntkqrbmhefmcafodigwvzw",
	"xpysntkqrbuhetmcarodiglvzx",
	"xpysntnqrbuhefmcajogiglfzw",
	"xpysutkqjbuheomcajodiglvzw",
	"xpysnqkprbuhefkcajodiglvzw",
	"xpysntuqrbuhemmcajodyglvzw",
	"spysntkqrbupefmcajodigpvzw",
	"qpygntkqrbuhefmcajodqglvzw",
	"xpysnteqrbuhefmcatodiylvzw",
	"xpysntkqrbusefsckjodiglvzw",
	"xpysntkqrbubeflcajodiglvcw",
	"xpysntwqrbuhefmcajodigekzw",
	"xpysntkqrbuhefmcnjodiguvtw",
	"xpysntkqrbqhefmkasodiglvzw",
	"xmysntkqrbuhefmkcjodiglvzw",
	"xpysntkqrquhefmcajodiouvzw",
	"xpysnnkqrbuhefmcajodiplyzw",
	"xpysntkorbuhefaqajodiglvzw",
	"npysntkqobuhefmcajodiglvfw",
	"xlysntkqrbuhefmcazbdiglvzw",
	"xpysftkqrbihefmcajodiglezw",
	"xpysolqqrbuhefmcajodiglvzw",
	"xpysntkqrwuheixcajodiglvzw",
	"xoysntkqibuhefmcqjodiglvzw",
	"xpysntkqrbupefmcajodtulvzw",
	"xpyentkqrbuhvfmcajudiglvzw",
	"xpysntksrbuhefmgajodqglvzw",
	"xpysntkqrbuhcfmcvjodigldzw",
	"gpyrntdqrbuhefmcajodiglvzw",
	"vpysntvqrbuhefmcajndiglvzw",
	"xpvsntkqrbuhefvcajhdiglvzw",
	"xpysntkqrbubefmcajowiglvzl",
	"xpysndkqibuhefmcajodiblvzw",
	"xpysntkqrbuhefmldjodjglvzw",
	"xpysntzqrbuhefmcyjomiglvzw",
	"xpysntkqrbuhefmedjodiwlvzw",
	"xpysntklrbuhefmcyjodiglvjw",
	"xpypnlkqrbehefmcajodiglvzw",
	"xpysntkqrbuhefycacodiglvzz",
	"ypysntkqrbuhefmcajadiglvew",
	"xpysntkqobuhefmcajadiglhzw",
	"xpysbtxlrbuhefmcajodiglvzw",
	"xpysntkqrbuhefdcajoviglvww",
	"xpysntkqrbuhefmcaaodiblvzc",
	"wpysntkqrbuhefmcajddiglvbw",
	"wpysntmqrbuhefmcajodiglvza",
	"epysntkqrbuhemmcajoniglvzw",
	"vpysntkqrbuhejmcajodiglvzo",
	"xpysntkqrbuhebmmajodiglazw",
	"lpysntkqrguhtfmcajodiglvzw",
	"xpksndkqpbuhefmcajodiglvzw",
	"xpydnukqrbuhefmcajmdiglvzw",
	"xpysnmkqrbuhefioajodiglvzw",
	"xpysntkqruuhefmcajodyglvzx",
	"xpysntkqrmuhefmcmjidiglvzw",
	"xpysntksrbupefmcajodiplvzw",
	"xpykntkqrbuhefmmajodiglxzw",
	"xpssntkqrbuhefmzajodiglvgw",
	"xpysntkqrbuhefmcrjodigovzd",
	"xpysntkqrbuhefmpajodirlvqw",
	"xpysnskqrruhefmtajodiglvzw",
	"xpysnzkqrbuhezmcajodiglvzj",
	"xpysntkcrburefmckjodiglvzw",
	"xpysntkqrbuhefecpoodiglvzw",
	"xpysnjkqrbuhexmcajodigrvzw",
	"xpysztkqhbuhefmcanodiglvzw",
	"xpysntkqrbuhefmcajozyelvzw",
	"xpyuntkmrbuhefmcajodigcvzw",
	"xpysnykmrbuhefmaajodiglvzw",
	"jpysntkqrbuhefmcajodigumzw",
	"xtysntkqhbuhefmcajodiglvzz",
	"xpysntkqrbqhefmcxjouiglvzw",
	"xpysntkqreujefmmajodiglvzw",
	"xnysntzqrbuhefacajodiglvzw",
	"xpysntkqriuhefmcajkdiqlvzw",
	"xposntkqrbuheffcajodihlvzw",
	"xpysntkqpquhefmcajodrglvzw",
	"xpysjtkqrbudefmcajouiglvzw",
	"xpysnxkqrbulefmcacodiglvzw",
	"xpygntkqrbuhefmfajzdiglvzw",
	"xpysntkqrbuhefmuayodiglyzw",
	"xpysnbksrbuhefmcajediglvzw",
	"xkyzntkqrbuhefmcajodiglvzz",
	"xpysntkqrbehlxmcajodiglvzw",
	"xpysntkqryuhefmcaxodiklvzw",
	"xpysntdqrbuhefmcjjodiglvzt",
	"xpysntkqrbuhefmcauodigqvzy",
	"xpysftkqrbuhefmcajodrgvvzw",
	"xpysntkqrbuhefmczjodiglivw",
	"xpysatkorbuhefmcyjodiglvzw",
	"xhysntkqrbthefmcajodxglvzw",
	"xpysnpkqrbuhefmcajoqyglvzw",
	"xpyyntkqrbuhefmcjjodxglvzw",
	"xpysntkqrozhefhcajodiglvzw",
	"xpymftkqrbuhefmcajodiglvzo",
	"xpysntkqrbuhvfmcajodiyllzw",
	"xpysatsqrbuhefmcajodiglvzo",
	"cpysntkqqbuhefmcajodlglvzw",
	"xpysntkyrblhefmcajodiglvzz",
	"xpysntkfrbuhefbcajodiglbzw",
	"upysotkqrbuhpfmcajodiglvzw",
	"xpysdokqrbuheflcajodiglvzw",
	"xrysntkqrbuhefpcanodiglvzw",
	"xdysntkqrbuhefpcajodiglmzw",
	"xpyynteqrbjhefmcajodiglvzw",
	"xpysntkqrbuhefkcajodielvhw",
	"xplsktkqrbuhefmcajodtglvzw",
	"xpysrtkqrbuhefmcdjodiglvzx",
	"upysntkmrbuhefmcajodiglvzt",
	"xnysnpkqrbusefmcajodiglvzw",
	"xtysntnqrbuhexmcajodiglvzw",
	"xpysngkmrbfhefmcajodiglvzw",
	"xpysnhkhrbuhefmcajodiplvzw",
	"xpysntvqrbuhefmcaoodsglvzw",
	"xpyzntkqrbuhefmcajlviglvzw",
	"xpysndkqrbuievmcajodiglvzw",
	"xpysntkqrsuhcfzcajodiglvzw",
	"xpysntkqlbuhefmcajjdlglvzw",
	"xpysntkqrbuhifmcajoliylvzw",
	"xpysntkqxbphefmcajodialvzw",
	"bnyswtkqrbuhefmcajodiglvzw",
	"upysatkqrbuhefmcajodvglvzw",
	"xpysntkqqbuhefmcajodxglzzw",
	"xpysntkqryuhefmcafodinlvzw",
	"xpzsntkqrcuhefmcajokiglvzw",
	"xpynntkqrbuheimccjodiglvzw",
	"xpysnfkqduuhefmcajodiglvzw",
	"xpywntkqrbuhefmcajodigllzz",
	"xpysftkqrbahefmcajsdiglvzw",
	"xpysntkkrbutefmcljodiglvzw",
	"xfysntkqrbbhkfmcajodiglvzw",
	"xpysgtksrbuhefkcajodiglvzw",
	"xpysntyqrbuhefmcajodijlvzg",
	"xpysnpkqobuhefmcljodiglvzw",
	"xvysntkqrbuhefmcsjodiclvzw",
	"xpysntkqrtuhwfmcajodillvzw",
	"xpysntkprbuhejmcajouiglvzw",
	"apysntkqrbuhefmcaboviglvzw",
	"xpysqykqrbuhefmcajodirlvzw",
	"xpysntkqrluhefmcajowiglvzf",
	"dpysnokqrbuhefmcajoaiglvzw",
	"xppsntkqmbuheumcajodiglvzw",
	"xpysntkqrbuhlymcaoodiglvzw",
	"dpysntkqrbuhmfmcajodiglvzt",
	"xpysltbqrbuhefmcajoliglvzw",
	"xpysntpqrbuhefmcnjoniglvzw",
	"xpysntpqrbuhektcajodiglvzw",
	"xpysntkhrbshefmqajodiglvzw",
	"zpysntuqrbuhefmcajmdiglvzw",
	"xpysxtdqrbuhefmcajoyiglvzw",
	"xpysntkubbumefmcajodiglvzw",
	"xpysntkqzouhefmcajsdiglvzw",
	"xpysntkqrbuhefmcojoziglvyw",
	"jpysntkqrmuhefmcajodidlvzw",
	"xpmsttkqrhuhefmcajodiglvzw",
	"xpysntkqlbuhefmcajgdiflvzw",
	"xpysntxkrbuhefmcauodiglvzw",
	"xpysotkqubuhefscajodiglvzw",
	"xjysntkqrbvheemcajodiglvzw",
	"xpykntkqrbuhefmcpjodiglvow",
	"xplsntkqrbuvefmcajediglvzw",
	"upysntwqrbuhefmfajodiglvzw"
    };

    string alphabet = "abcdefghijklmnopqrstuvwxyz";
    int count[26];
    int i2 = 0, i3 = 0;
    bool b2, b3;
    char curr;
    
    //for each element in codes
    for (int i = 0; i < 250; i++)
    {
	//set all elements in count to 0 
	for (int a = 0; a < 26; a++) count[a] = 0;
	//for each character in code
	for (int j = 0; j < 26; j++)
	{
	    //for each character in alphabet
	    for (int o = 0; o < 26; o++)
	    {
		if(codes[i][j] == alphabet[o])
		{
		    count[o]++;
		    break;
		}
	    }
	}
	
	b2 = b3 = false;
	
	//for each element in count
	for (int c = 0; c < 26; c++)
	{
	    b2 = (count[c] == 2) ? true : b2;
	    b3 = (count[c] == 3) ? true : b3;
	}
	
	//increment if found
	i2 += b2;
	i3 += b3;
    }
    
    int checksum = i2*i3;
    cout << (checksum) << endl;
    
    return 0;
    while(1);
}
